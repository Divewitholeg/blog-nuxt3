{"version":3,"file":"document-driven-a2015239.js","sources":["../../../../node_modules/nuxt/dist/app/components/layout.js"],"sourcesContent":["import { Transition, computed, defineComponent, h, inject, nextTick, onMounted, unref } from \"vue\";\nimport { _wrapIf } from \"./utils.js\";\nimport { useRoute } from \"#app/composables/router\";\nimport { useRoute as useVueRouterRoute } from \"#build/pages\";\nimport layouts from \"#build/layouts\";\nimport { appLayoutTransition as defaultLayoutTransition } from \"#build/nuxt.config.mjs\";\nconst LayoutLoader = defineComponent({\n  name: \"LayoutLoader\",\n  inheritAttrs: false,\n  props: {\n    name: String,\n    ...process.dev ? { hasTransition: Boolean } : {}\n  },\n  async setup(props, context) {\n    let vnode;\n    if (process.dev && process.client) {\n      onMounted(() => {\n        nextTick(() => {\n          if (props.name && [\"#comment\", \"#text\"].includes(vnode?.el?.nodeName)) {\n            console.warn(`[nuxt] \\`${props.name}\\` layout does not have a single root node and will cause errors when navigating between routes.`);\n          }\n        });\n      });\n    }\n    const LayoutComponent = await layouts[props.name]().then((r) => r.default || r);\n    return () => {\n      if (process.dev && process.client && props.hasTransition) {\n        vnode = h(LayoutComponent, context.attrs, context.slots);\n        return vnode;\n      }\n      return h(LayoutComponent, context.attrs, context.slots);\n    };\n  }\n});\nexport default defineComponent({\n  name: \"NuxtLayout\",\n  inheritAttrs: false,\n  props: {\n    name: {\n      type: [String, Boolean, Object],\n      default: null\n    }\n  },\n  setup(props, context) {\n    const injectedRoute = inject(\"_route\");\n    const route = injectedRoute === useRoute() ? useVueRouterRoute() : injectedRoute;\n    const layout = computed(() => unref(props.name) ?? route.meta.layout ?? \"default\");\n    let vnode;\n    let _layout;\n    if (process.dev && process.client) {\n      onMounted(() => {\n        nextTick(() => {\n          if (_layout && _layout in layouts && [\"#comment\", \"#text\"].includes(vnode?.el?.nodeName)) {\n            console.warn(`[nuxt] \\`${_layout}\\` layout does not have a single root node and will cause errors when navigating between routes.`);\n          }\n        });\n      });\n    }\n    return () => {\n      const hasLayout = layout.value && layout.value in layouts;\n      if (process.dev && layout.value && !hasLayout && layout.value !== \"default\") {\n        console.warn(`Invalid layout \\`${layout.value}\\` selected.`);\n      }\n      const transitionProps = route.meta.layoutTransition ?? defaultLayoutTransition;\n      return _wrapIf(Transition, hasLayout && transitionProps, {\n        default: () => _wrapIf(LayoutLoader, hasLayout && {\n          key: layout.value,\n          name: layout.value,\n          ...process.dev ? { hasTransition: !!transitionProps } : {},\n          ...context.attrs\n        }, context.slots).default()\n      }).default();\n    };\n  }\n});\n"],"names":["useVueRouterRoute","defaultLayoutTransition"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,MAAA,eAAA,gCAAA;AAAA,EACA,MAAA;AAAA,EACA,cAAA;AAAA,EACA,OAAA;AAAA,IACA,MAAA;AAAA,IACA,GAAA,CAAA;AAAA,EACA;AAAA,EACA,MAAA,MAAA,OAAA,SAAA;AAWA,UAAA,kBAAA,MAAA,QAAA,MAAA,IAAA,EAAA,EAAA,KAAA,CAAA,MAAA,EAAA,WAAA,CAAA;AACA,WAAA,MAAA;AAKA,aAAA,EAAA,iBAAA,QAAA,OAAA,QAAA,KAAA;AAAA,IACA;AAAA,EACA;AACA,CAAA;AACA,MAAA,qBAAA,gCAAA;AAAA,EACA,MAAA;AAAA,EACA,cAAA;AAAA,EACA,OAAA;AAAA,IACA,MAAA;AAAA,MACA,MAAA,CAAA,QAAA,SAAA,MAAA;AAAA,MACA,SAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,MAAA,OAAA,SAAA;AACA,UAAA,gBAAA,OAAA,QAAA;AACA,UAAA,QAAA,kBAAA,SAAA,IAAAA,WAAA,IAAA;AACA,UAAA,SAAA,SAAA,MAAA,MAAA,MAAA,IAAA,KAAA,MAAA,KAAA,UAAA,SAAA;AAYA,WAAA,MAAA;AACA,YAAA,YAAA,OAAA,SAAA,OAAA,SAAA;AAIA,YAAA,kBAAA,MAAA,KAAA,oBAAAC;AACA,aAAA,QAAA,YAAA,aAAA,iBAAA;AAAA,QACA,SAAA,MAAA,QAAA,cAAA,aAAA;AAAA,UACA,KAAA,OAAA;AAAA,UACA,MAAA,OAAA;AAAA,UACA,GAAA,CAAA;AAAA,UACA,GAAA,QAAA;AAAA,QACA,GAAA,QAAA,KAAA,EAAA,QAAA;AAAA,MACA,CAAA,EAAA,QAAA;AAAA,IACA;AAAA,EACA;AACA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}